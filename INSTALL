Building libBioLCCC/pyBioLCCC on Linux.
*****************************************

libBioLCCC
===========

In order to compile libBioLCCC you need the following tools to be installed:

* GNU C++ compiler
* Python 2.6 (other versions 2.x are accepted, but not tested yet)
* SCons build system
* (pyBioLCCC) SWIG interface wrapper
* (documentation) Doxygen documentation system
* (documentation) Sphinx documentation system
* (optional) Mercurial version control system

All these tools can be installed from the main repository of your Linux
distribution or via pip/easy_install packaging system of Python. 

To build libBioLCCC, please, download the source code, make separate build 
directory (!) and execute in it:

.. code-block:: bash
    
    scons -Y /path/to/source/directory all

The build scripts will do all the remaining work.

pyBioLCCC
==========

In order to compile and install the Python package:

* In the build directory compile target 'pyBioLCCC' using SCons build scripts.

  .. code-block:: bash

      scons -Y /path/to/source/directory pyBioLCCC

* After that run setup.py:

  .. code-block:: bash

      python setup.py build

  or

  .. code-block:: bash

      python setup.py install


Building libBioLCCC/pyBioLCCC on Windows.
******************************************

As we mentioned, the main platform of libBioLCCC/pyBioLCCC development is Linux.
However, we clearly understand the importance of Windows and try to write 
only platform-independent code and to use only cross-platform tools.
Theoretically it means that it will make no difficulty to compile libBioLCCC
under Windows.

So far only the pyBioLCCC package was compiled for Windows using Wine+MinGW32.
The instructions are the following:

1. Install the latest Wine distribution. On Debian-based systems it is done via:

   .. code-block:: bash

      sudo apt-get install wine

2. Download and install the latest MinGW distribution UNDER Wine.

   .. code-block:: bash

        wget http://sourceforge.net/projects/mingw/files/Automated%20MinGW%20Installer/MinGW%205.1.6/MinGW-5.1.6.exe/download -P /tmp/
        wine /tmp/MinGW-5.1.6.exe

3. Compile target 'pyBioLCCC' under Linux. The main reason is to generate
   the C++ code with Python wrappings.

   .. code-block:: python

        scons -Y /path/to/source/directory pyBioLCCC

4. Using wine, mingw32 and setup.py build an installable pyBioLCCC Windows 
   package.

   .. code-block:: bash
       
       wine python setup.py build -c mingw32 bdist_wininst

5. If you plan to upload the pyBioLCCC-derived packages to PyPi then:

   a. Set the HOME environment variable to C:\\users\\your_user", where 
      replace your_user by your login name in Linux.
      In order to set this variable print 'wine regedit' in console. Using 
      the regedit window navigate to HKEY_CURRENT_USER/Environment and 
      right-click on the right field choosing Add->String value.

   b. Create .pypirc in C:\\users\\your_user and fill it with the following
      text:

      .. code-block:: python

          [distutils]
          index-servers =
              pypi

          [pypi]
          username:<username>
          password:<password>

      Where <username> and <password> are the ones for your account at PyPi.
